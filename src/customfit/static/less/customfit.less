@import "customfit_bootstrap.less";
@import "variables.less";

// Note: if you're looking for a class/ID that's not here, look in individualpattern_pdf.html.
// We might be using it there to format PDFs.

/*
-----------------------------------------------------------------------------
TYPOGRAPHY & LAYOUT
-----------------------------------------------------------------------------*/

body {
  background-color: white; /* explicit is better than implicit */
  color: @body-color;
  font-family: @body-font;
  font-size: @font-size-large;
  font-weight: bold;
}

#main-content {
  padding-bottom: 20px;

  /* make sure to clear fixed footer, with breathing room */
  @media (min-width: @screen-sm-min) {
    padding-bottom: 4*@line-height-computed + 60px;
  }

  @media (min-width: @screen-md-min) {
    padding-bottom: @line-height-computed + 60px;
  }
}

h1, h2, h3, h4, h5, h6 {
    color: @dark-grey;
}

h1, h2 {
  font-family: @header-font;
  text-transform: uppercase;
  margin-top: 1.5*@font-size-h2;
  margin-bottom: @font-size-h2;

  @media (max-width: @screen-xs-max) {
    margin-top: @font-size-h2;
    margin-bottom: 0.5*@font-size-h2;    
  }
}

h3 {
  font-family: @header-font;
  text-transform: uppercase;
  margin-top: 1.5*@font-size-h3;
  margin-bottom: @font-size-h3;

  @media (max-width: @screen-xs-max) {
    margin-top: @font-size-h3;
    margin-bottom: 0.5*@font-size-h3;    
  }
}

h4 {
  margin-top: 1.5*@font-size-h4;  
  margin-bottom: @font-size-h4;

  @media (max-width: @screen-xs-max) {
    margin-top: @font-size-h4;
    margin-bottom: 0.5*@font-size-h4;    
  }
}

.strong() {
  font-family: Verdana, @body-font;
  font-weight: normal;
}

strong, b {
  .strong;
}

.patterntext {
  /* All of the headers in our patterntext are a step too large for their role on
     the page. Rather than checking all the renderers at this point, just style
     them appropriately, and do penance for breaking the semantics.
  */
  h2 {
    font-family: @header-font;
    text-transform: uppercase;
    font-size: 24px;
  }

  h3 {
    font-family: @body-font;
    text-transform: none;
    color: @body-color;
    font-size: 18px;
    font-weight: bold;
  }
}

a {
  color: @orange;
  text-decoration: none;

  &:hover, &:active, &:focus {
    text-decoration: underline;
    color: @yellow;  
  }

  &:focus {
    outline-color: @yellow;
  }


}

a[role='button'] {
  color: inherit;
}


/* Misc layout utility classes ---------------------------------------------- */
.lead-customfit {
  /* For the informational paragraph at the top of some pages. */
  width: 66.66666666666666666666666%;
  margin-left: 16.66666666666666666666666%;

  @media (max-width: @screen-sm-max) {
    width: 83.333333333333333333333%;
    margin-left: 8.333333333333333333333%;
  }

  @media (max-width: @screen-xs-max) {
    width: auto;
    margin: auto;
  }
  .text-center;
}

.left-justify {
  margin-left: 0 !important;
  padding-left: 0 !important;
}

.left-justify-padding {
  padding-left: 0 !important;
}

.right-justify {
  margin-right: 0 !important;
  padding-right: 0 !important;
}

.pad-right {
  padding-right: 15px;
}

.text-indent {
  padding-left: 15px;
}

.text-centered-phone {
  @media (max-width: @screen-xs-max) {
    .text-center;    
  }
}

.truncate-line-height-two {
  max-height: 2*@line-height-computed + 10px;
  overflow: hidden;
}

div.force-line-height-two {
  /* This creates a div tall enough for two lines of text; hides any overflow;
     and bottom-aligns its content (put any text in a <span> to get the effect).
  */
  height: 2*@line-height-computed + 10px;
  overflow: hidden;
  position: relative;

  span {
    position: absolute;
    bottom: 0;
  }
}


.btn-ravelry {
  span {
    height: 21px;
    line-height: 21px;
  }

  img {
    margin: 0 5px 0 -5px;
  }
}

/* Vertical spacers --------------------------------------------------------- */

.margin-top-0 {
  /* For vertically aligning things that would otherwise have top margins
     adjacent to things that don't.
  */
  margin-top: 0 !important;
}

.margin-top-10 {
  margin-top: 10px !important;
}

.margin-top-15 {
  /* Useful for vertically aligning things adjacent to help callout boxes. */
  margin-top: 15px !important;
}

.margin-top-20 {
  /* Useful for vertically aligning things adjacent to headers. */
  margin-top: 20px !important;
}

.margin-top-40 {
  margin-top: 40px !important;
}

.margin-top-45 {
  margin-top: 45px !important;
}

.margin-bottom-5 {
  margin-bottom: 5px !important;
}

.margin-bottom-20 {
  margin-bottom: 20px !important;
}

.swatch-tile-margins {
  margin-bottom: 60px;

  @media (max-width: @screen-xs-max) {
    margin-bottom: 20px;
  }
}

.extra-margins {
  /* For adding whitespace above and below paragraphs. */
  margin-top: 1.5*@line-height-computed;
  margin-bottom: 1.5*@line-height-computed;
}

.extra-margins-large {
  /* For adding even more whitespace above and below paragraphs. */
  margin-top: 2.5*@line-height-computed;
  margin-bottom: 2.5*@line-height-computed;
}

/* For elements that look best right-justified on large screens, but look
   silly right-justified on phones (where they tend to be under, rather than
   next to, a leftward companion item). elements with this class will right-
   justify on tablet size and up, and fill the screen width on phones.
*/
.pull-right-or-fill {
  .pull-right;
}

@media (max-width: @screen-sm-max) {
  .pull-right-or-fill {
    width: 100%;
  }
}

.shadowed {
  .box-shadow(@shadow: 10px 10px 5px #999);
}

.maker-letter {
  border: 1px solid #aaa;
  padding: 20px;
  margin: 0 auto 20px auto;
  max-width: 900px;
}

.well {
  h1, h2, h3, h4 {
    margin-top: 0;
  }

  background-color: @five-percent-grey;
}

.well-bg-white {
  background-color: white;
}

.customfit-admin {
  /* Intended for styling messages that only show up for CF admin, so we can clearly
     signpost the admin-only functionality. Should not be used outside of
     {% if user.is_staff %}.
  */
  background-color: @danger-color;
  color: white;
  padding: @line-height-computed;
  font-size: @font-size-base*1.25;
  .border-radius(4px);

  a {
    color: @grey;

    &:hover {
      color: darken(@grey, 20%);
    }
  }
}

.glyphicon-customfit {
  background-color: @call-to-action;
  color: white;
  //font-weight: bold;
  .text-center;

  /* These numbers make glyphicons align vertically next to form inputs, which
     have a 34px hardcoded height. */
  font-size: 16px;
  width: 24px;
  height: 24px;
  line-height: 24px;
  //padding-top: 4px;
  margin-top: 5px;
  top: inherit;
  .border-radius(12px);

  &:hover {
    cursor: pointer;
    background-color: darken(@call-to-action, 10%);
  }

  // Don't know why they look more centered with the padding, but they do.
  &.glyphicon-minus {
    padding-right: 2px;
  }

  &.glyphicon-plus {
    padding-left: 2px;
  }
}

.faux-table-hover .row {
  @media (min-width: @screen-md-min) {
    margin-bottom: @line-height-computed*.5;
  }

  @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
    margin-bottom: @line-height-computed*.25;
  }

  &:hover {
    background-color: @table-bg-hover;
  }  
}

/*
-----------------------------------------------------------------------------
HEADER, NAV BARS & FOOTER
-----------------------------------------------------------------------------*/

#secondary-nav-wrapper {
    width: 100%;
    background: #f7f7f7;
    padding: 0 25px;
    position: relative;
    z-index: 10000;
    border-bottom: 1px solid #e8e6e6;
    .secondary-navigation {
        .desktop-navigation {
            text-transform: uppercase;
            text-align: right;
            @media (max-width: @screen-sm) {
                display: none;
            }
            a {
                color: #42404e;
                text-decoration: none;
                font-size: 14px;
                &:hover {
                    opacity: .7;
                    transition: background-color .3s ease-in-out,opacity .6s ease;
                }
                @media (max-width: @screen-lg) {
                    font-size: 12px;
                }
            }
            .menu {
                list-style: none;
                margin: 0;
                padding: 0;
                >li {
                    display: inline-block;
                    margin-left: 5px;
                    position: relative;
                    .sub-menu {
                        float: left;
                        position: absolute;
                        top: 100%;
                        display: none;
                    }
                    &.current_page_item {
                        >a {
                            font-family: Verdana sans-serif;
                        }
                    }
                    &:hover {
                        .sub-menu {
                            display: block;
                            background: #f7f7f7;
                            text-align: left;
                            margin: 0;
                            padding: 0;
                            >li {
                                list-style: none;
                                >a {
                                    min-width: 194px;
                                    display: block;
                                    padding: 15px;
                                }
                            }
                        }
                    }
                    >a {
                        padding: 16px 12px;
                        display: block;
                    }
                    &.menu-item-has-children {
                        >a {
                            &:after {
                                content: "\f107";
                                display: inline-block;
                                font: normal normal normal 14px/1 FontAwesome;
                                font-size: inherit;
                                margin-left: 1em;
                                text-rendering: auto;
                            }
                        }
                    }
                }
            
            }
        }
    }
}

#mobile-header {
    .navbar-toggle {
        color: #5c5b65;
        position: relative;
        padding: 0 30px 0 0;
        .icon-bar {
            background: #333;
            width: 19px;
        }
        .text {
            font-size: 15px;
            height: 14px;
            line-height: 14px;
            position: absolute;
            left: 25px;
            top: 0;
            &:hover {
                opacity: .7;
                transition: opacity .6s ease;
            }
        }
    }
}

.handheld-navigation {
    display: none;
    @media (max-width: @screen-sm) {
        display: block;
    }
    ul {
        list-style: none;
        a {
            color: #5c5b65;
            display: block;
            padding: 5px 25px;
            &:hover {
                color: #111;
                background-color: #f0f0f0;
                text-decoration: none;
                transition: border .2s,color .3s ease-in-out;
            }
        }
        ul {
            padding-left: 22px;
        }
    }
}

#navbar-greeting {
    @media (max-width: @screen-sm) {
        display: none;
    }
}

header {
  position: relative;
  margin-top: 24px;
  
  img.logo {
      @media (max-width: @screen-sm-max) {
          max-width: 70%;
      }
  }

  .nav {
    font-family: @body-font;
    
    >li {
        margin-left: 20px;
        position: relative;
        >ul {
            display: none;
            position: absolute;
            top: 70px;
            left: 0;
            list-style: none;
            padding: 0;
            background: #fff;
            z-index: 100;
            border-bottom: 8px solid #b4d4cf;
            >li {
                >a {
                    white-space: nowrap;
                    font-size: 18px;
                    padding: 15px 20px;
                    display: block;
                    &:hover {
                        text-decoration: none;
                        color: #111;
                        background-color: #f9f9f9;
                    }
                    &.active {
                        background-color: #f9f9f9;
                        &:hover {
                            background-color: #f3f3f3;
                        }
                    }
                }
            }
        }
        >a {
            display: block;
            padding: 0 15px 40px;
            &.active {
                border-bottom: 8px solid #b4d4cf;
            }
        }
        &:hover>ul {
            display: block;
        }
        &.has-children {
            > a {
                &:after {
                    display: inline-block;
                        font: normal normal normal 14px/1 FontAwesome;
                        font-size: inherit;
                        text-rendering: auto;
                        -webkit-font-smoothing: antialiased;
                        -moz-osx-font-smoothing: grayscale;
                        content: "\f107";
                        margin-left: 7px;
                }
            }
        }
        &:last-child > ul {
            left: auto;
            right: 0;
        }
    }

    a {
      color: @grey;
      transition: border .2s,color .3s ease-in-out;
      border-radius: 0;
      padding: 0;
      &:hover, &:focus {
          background-color: transparent;
          color: #111;
      }
    }
  }

  img {
    margin: 10px 0;
  }

  /* On phone screens, center the image and shrink the nav text. A br element
     visible only on small screens ensures that the nav is under the image.*/
  @media (max-width: @screen-xs-max) {
    margin-top: 0.5*@line-height-computed;
 
    .nav {
      font-size: @font-size-h3;

      ul {
        position: relative;
        margin: 20px 0;
      }

      li:nth-child(1) {
        .pull-left;
      }

      li:nth-child(2) {
        position: absolute;
        left: 50%;
        margin-left: -1em;
        bottom: 0;
      }

      li:nth-child(3) {
        .pull-right;
      }
    }

    img {
      margin: 10px auto 0 auto;
    }
    #header-logo-link-mobile {
        display: block;
        width: 170px;
        padding-left: 25px;
        float: left;
        .mobile-logo {
            width: 100%;
            display: block;
            margin: 0 0 10px 0;
        }
    }
  }

  /* On tablet and larger screens, pull the image left and the nav right;
     vertically center the nav. */
  @media (min-width: @screen-sm-min) {
    .nav {
      position: absolute;
      top: 50%;
      right: 0;
      margin-top: -18px;
      font-size: 21px;  
    }

    img {
      .pull-left;
    }
  }
}

nav.navbar {
    min-height: 40px;
    .navbar-text {
        margin-bottom: 0;
    }
}

.navbar-default {
  font-size: 14px;
  letter-spacing: 1.4px;
  background-color: @brand-trim;
  color: #fff;
  font-family: @body-font;
  border: none;
  border-top: 1px solid #e8e6e6;
  .border-radius(0);
  margin-bottom: @font-size-h2;
  margin-top: 0.5*@font-size-h2;

  @media (max-width: @screen-xs-max) {
    margin-bottom: 0.5*@font-size-h2;
    margin-top: auto;
  }
  
  .navbar-nav {
      > li {
          > a {
              color: #fff;
              padding: 10px 5px;

              &:hover, &:focus {
                color: white;
              }
          }
      }
      
      > .open {
          > a {
              color: white;
              background-color: @lighter-grey;
              @media (max-width: @screen-xs-max) {
                  &:focus {
                      background: none;
                      color: #fff;
                  }
              }
          }
          .dropdown-menu {
              > li {
                  > a {
                      @media (max-width: @screen-xs-max) {
                          color: #fff;
                      }
                  }
              }
          }
      }
  }

  .navbar-text {
    color: #fff;
    line-height: 20px;
  }

  .dropdown-menu > li > a {
    color: @body-color;
    &:hover {
      color: @body-color;
      background-color: @lightest-grey;
    }
  }
  
  

  li:focus {
    outline-color: none;
  }

  button.navbar-toggle {
    margin-bottom: 0;
    margin-top: -8px;
  }

}

hr.logged-out-subnav {
  /* Occupies the subnav's role in our design, for users who aren't logged in. */
  height: .25em;
  background-color: @lightest-grey;
  width: 100%;
}

@media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
  hr.logged-out-subnav {
    height: .5em;
  }
}

@media (min-width: @screen-md-min) {
  hr.logged-out-subnav {
    height: 1em;
  }
}

footer {
  margin-top: 20px;
  background-color: @lightest-grey;
  color: @grey;
  font-family: @body-font;
  font-size: @font-size-base;
  border: none;
  .border-radius(0);

  @media (min-width: @screen-sm-min) {
    /* Fix footer to bottom of screen on larger screens */
    position: fixed;
    right: 0;
    left: 0;
    bottom: 0;
    z-index: 100;    
  }

  /* On tablets, center the navs. On larger screens, float
     the nav right.
  */
  @media (max-width: @screen-sm-max) {
    #footer-nav-parent {
      text-align: center;   /* This center-aligns the nav contained in this div. */
    }

    .nav {
      display: inline-block; /* This shrinks the nav to fit its contents. */
    }
  }
  @media (min-width: @screen-md-min) {
    .nav {
      .pull-right;

      > li > a {
        padding-top: 20px; /* force vertical centering by matching margin on images */        
        padding-bottom: 15px; /* stretch to bottom of footer so that hover color will reach bottom */        
      }
    }
  }


  li:hover, li:focus, li:active {
    background-color: @light-grey;
  }

  .nav > li > a { // this rule must have enough specificity to override the usual rule
    color: @grey;

    &:hover, &:focus, &:active {
      background-color: @light-grey;
      .border-radius(0);
      color: white;
    }
  }
}

/*
  .navbar-nav > li > a {
    color: @body-color;

  }


  .navbar-nav > .open > a {
    color: white;
    background-color: @lighter-grey;    
  }

  .navbar-text {
    color: @body-color;
    line-height: 20px;
  }
*/

/*
-----------------------------------------------------------------------------
IMAGES
-----------------------------------------------------------------------------*/

img {
  /* Default styling if nothing else is applied */
  .img-rounded;
  .img-responsive;
  margin: 10px auto;
}

a img:hover {
  /* Images that are also links should provide some visual cue on hover. */
  opacity: 0.8;
}

.img-customfit {
  /* Looks best with a square image. */
  /*.border-radius(50%);*/
  .img-responsive;
  transition: all .2s ease-in-out;
}

.design-image {
    @media (min-width: @screen-md-min) {
        img {
            margin: 0 0 10px 0;
        }
    }
}


/*
-----------------------------------------------------------------------------
ZENBOX OVERRIDES
-----------------------------------------------------------------------------*/

#zenbox_tab {
  .border-left-radius(4px);

  img {
    margin: auto !important;
    .border-left-radius(4px);
  }

  /* Position tab on the top of phone screens, so it doesn't overlap
     navigation elements.
  */

  @media (max-width: @screen-sm-max) {
    top: 0 !important;
    .border-top-radius(0);
    .border-bottom-radius(4px);

    img {
      .border-top-radius(0);
      .border-bottom-radius(4px);      
    }
  }  
}

/* On small screens, make the zenbox help entry box fit within the screen. */
@media (max-width: @screen-sm-max) {
  #zenbox_container {
    width: 96% !important;
    margin-left: 2%;
    margin-right: 2%;
  }

  #zenbox_body {
    width: 96% !important;
    margin: auto;
  }

  body.knowledge_base {
    min-width: 0 !important;
  }
}
/*
-----------------------------------------------------------------------------
BUTTONS
-----------------------------------------------------------------------------*/

/* .btn-customfit should be used (by itself) on all <button>, <input>, and <a> elements
   that represent a user action, except high priority calls to action, which are
   .btn-customfit-action.
*/

.btn-customfit {
  .btn;
  background-color: @grey;
  border-color: darken(@grey, 10%);
  color: white;
  text-transform: lowercase;
  margin-top: 6px;
  margin-bottom: 6px;
  white-space: normal;

  &:hover, &:focus, &:active, &:focus:active {
    background-color: darken(@grey, 10%);
    border-color: darken(@grey, 21%);   
    color: white; 
  }

  &:focus, &:active {
    .form-control-focus(@color: white);
  }

  &:focus:active, &:focus, &:active {
    outline-color: none;
  }

  &:focus:active {
      box-shadow: rgba(0, 0, 0, 0.121569) 0px 3px 5px 0px inset;    
  }

  &.is-checked {
    background-color: blue;
  }

  /* If we have more than one button in a row, ensure that they have some
     space between them. But not on phones, where they typically stack
     rather than being side-by-side. */
  @media (min-width: @screen-sm-min) {
    margin-right: 15px;
    &:last-child {
      margin-right: 0;
    }    
  }
}

.btn-customfit-action {
  .btn-customfit;
  background-color: @grey;
  border-color: @grey;
  color: white;

  &:hover, &:focus, &:active, &:focus:active  {
    background-color: darken(@grey, 10%);
    border-color: @light-grey;   
    color: white; 
  }

  &:focus:active, &:focus {
    outline-color: none;
  }
}

.btn-customfit-danger {
  /* Intended for things like body deletion: buttons you shouldn't push unless you're
     really sure.
  */
  .btn-customfit;
  background-color: @danger-color;
  border-color: darken(@danger-color, 10%);
  color: white;
  text-transform: uppercase;

  &:hover, &:focus, &:active, &:focus:active {
    background-color: darken(@danger-color, 10%);
    border-color: darken(@danger-color, 21%);   
    color: white; 
  }

  &:focus:active, &:focus {
    outline-color: @danger-color;
  }
}

.btn-customfit-outline {
  /* This is intended for de-emphasized actions. It produces an outline-only button -
     normal body text and background colors.
  */
  .btn-customfit;
  background-color: @lightest-grey;
  border-color: @body-color;
  color: @body-color;

  &:hover, &:focus, &.active, &:focus:active {
    background-color: @light-grey;
    border-color: @light-grey;
    color: white;
  }
}

.btn-customfit-lg {
  /* For some adding the css class in the stylesheet doesn't embiggen
     btn-customfits, but creating it here works just fine.
  */
  .btn-lg;
}

.btn-customfit-sm {
  .btn-sm;
}

.btn-group {
  .btn {
    .btn-customfit-outline;

    &.active {
      background-color: @light-grey;
      color: white;
      box-shadow: rgba(0, 0, 0, 0.121569) 0px 3px 5px 0px inset; 
    }
  }

  .btn {
    margin-right: 0;
  }

  .btn-silhouette-option {
    padding: 6px 9px;
  }

}


.btn-form-group-lg {
  .btn-group .btn {
    .btn-customfit-lg;
  }

  &.btn-group-justified-2 {
    .form-group {
      @media (max-width: @screen-xs-max) {
        width: 100%;      
      }

      @media(min-width: @screen-sm-min) {
        width: 80%;
        margin-left: 0;
      }

      .btn-group {
        width: 100%;
      }

      .btn {
        width: 50%;
      }
    }
  }
}

.btn-right .btn-group {
  .pull-right;
}

.stripe-button-el {
  /* Override the heck out of stripe button styling. Requires 'important' because
     otherwise Stripe's style, which is at the end of the cascade, applies.
  */
  .btn-customfit !important;
  background-image: none !important;
  box-shadow: none !important;

  span {
    background-image: none !important;
    background-color: rgba(0, 0, 0, 0) !important;   
    box-shadow: none !important; 
    font-family: @body-font !important;
    padding: 0 !important;
    min-height: 0 !important;
    line-height: inherit !important;
    height: auto !important;
  }
}


/*
-----------------------------------------------------------------------------
FORMS
-----------------------------------------------------------------------------*/

label {
  /* Force consistency across form labels, including those rendered from third-party apps. */
  text-transform: lowercase;
}

.faux-label {
  font-weight: bold;
  text-transform: lowercase;
  font-size: 85%;
}

ul.alert-error {
  color: @error-color;
  background-color: white;
  list-style-type: none;
  padding-left: 0;
  font-weight: bold;
  border: 1px solid @error-color;
  .border-radius(4px);
  padding: 6px 12px;
}

.alert-danger ul {
  color: white;
  background-color: @error-color;
  padding-left: 0;
  padding: 6px 12px;
  list-style-type: none;
}

form {
  &:focus , .form-control:focus {
    /* Make form elements have grey glowy outlines when they have focus. */
    .form-control-focus(@color: #bbb);  
  }

  .form-control {
    .placeholder(@light-blue); /* bootstrap mixin only controls color, not other styles */

    &::-moz-placeholder { font-style: italic; font-weight: bold; } // Firefox 19+
    &:-ms-input-placeholder { font-style: italic; font-weight: bold; } // Internet Explorer 10+
    &::-webkit-input-placeholder  { font-style: italic; font-weight: bold; } // Safari and Chrome
  }

  label {
    font-size: 85%;
  }

  .has-error {
    .form-control {
      border-color: @error-color;

      &:focus {
        .form-control-focus(@color: @error-color);      
      }
    }

    label {
      color: @error-color;
    }
  }

  .force-form-input-styling input {
    .form-control;
    .border-radius(4px);
    border: 1px solid rgb(204, 204, 204);
    font-size: 14px;
    height: 34px;
    width: 100%;

    &:focus {
      .form-control-focus(@color: #ccc);
    }
  }

  .hide-help-text .help-block {
    display: none;
    margin-top: 10px;
  }

  input {
    @media (min-width: @screen-sm-min) {
      margin-bottom: 0.5*@line-height-computed;
    }
  }
}

fieldset {
  padding-bottom: @font-size-h3;
}

/* Firefox does weird things with fieldsets and the fix documented at 
   https://stackoverflow.com/questions/17408815/fieldset-resizes-wrong-appears-to-have-unremovable-min-width-min-content/17863685#17863685
   doesn't work for us. This manually specifies the heck out of fieldset element layout.
*/
@-moz-document url-prefix() {
  .fix-firefox-fieldsets {

    @media (min-width: @screen-md-min) {
      .form-group {
        margin-right: 50% !important;
        margin-bottom: 17px !important;
        position: relative;
        clear: right;

        .control-label {
          min-width: 165px;
          position: absolute;
          right: 231px;
        }

        .controls {
          width: 165px;
          position: absolute;
          right: 66px;
        }

        .glyphicon-minus {
          position: absolute;
          right: 12px;
        }

        .glyphicon-plus {
          position: absolute;
          right: 42px;
        }
      }

      .faux-label {
        margin-right: 50%;
        clear: both;
      }
    }

    @media (min-width: @screen-xs-min) {
      .form-group {
        margin-bottom: 17px !important;
        position: relative;
        .clearfix;
        width: 100%;

        .control-label {
          min-width: 165px;
          position: absolute;
          right: 231px;
        }

        .controls {
          width: 165px;
          position: absolute;
          right: 66px;
        }

        .glyphicon-minus {
          position: absolute;
          right: 12px;
        }

        .glyphicon-plus {
          position: absolute;
          right: 42px;
        }
      }

      .faux-label {
        .clearfix;
      }
    }

  }
}


/* Aligning several form fields in one row, per the swatch entry
   wireframe, requires a lot of fiddling around with overriding
   bootstrap. */
@media ( min-width: @screen-sm-min ) {
  #swatch-create-form {
    input.form-control {
        padding: 6px 8px;
    }
  }
  .gauge-form-row-group {
    .clearfix;
    .form-group {
      /* override bootstrap native clearfix */
      display: inline-block !important;
      float: left;

      &:before,
      &:after {
        display: none;
        content: '';
      }
      &:after {
        clear: none;
      }
    }

    div {
      float: left;
    }
    
    .form-control {
        min-width: 50px;
    }

    .form-group:first-child {
      /* faff about with sizes so field edges and labels align with
         edges and labels of normal horizontal form fields */
      width: 66.666666666666666666666%;
      float: left;
      margin-right: 0;

      label {
        width: 50%;
        padding: 0 5px;
      }

      .controls {
        width: 50%;
        padding: 0 10px;
      }
    }

    div:nth-child(2) {
      /* Vertically center the "in" text by the inputs, which have a
         hard-coded 34px height.
      */
      line-height: 34px;
      height: 34px;
    }

    .form-group:nth-child(3) {
      max-width: 30%;
      float: right;
      margin-left: 0;

      label {
        .sr-only;    
      }

      .controls {
        width: 100%;
      }
    }
  }
}

@media ( max-width: @screen-xs-max ) {
  .gauge-form-row-group {
    .form-group:first-child {
      margin-left: -15px;
      margin-right: -15px;
      .clearfix;
    }

    div:nth-child(2) {
      /* Vertically center the "in" text by the inputs, which have a
         hard-coded 34px height.
      */
      line-height: 34px;
      height: 34px;
      float: left;
    }

    .form-group:nth-child(3) {
      max-width: 100%;
      float: right;
      padding-left: 10px;

      label {
        .sr-only;    
      }
    }
  }
}

.hide-help-text {
  .help-block {
    display: none;
  }
}

legend {
  /* Make legends look like h3s, but grey instead of blue. */
  font-family: @header-font;
  font-weight: @headings-font-weight;
  line-height: @headings-line-height;
  margin-top: @font-size-h3;
  margin-bottom: @font-size-h3;
  font-size: @font-size-h3;
  color: @grey;
  text-transform: uppercase;
  border: none;
}

/*
-----------------------------------------------------------------------------
HELP BOXES

Help boxes, sidebars, callouts in general.
-----------------------------------------------------------------------------*/

/* Use thusly:
  <div class="help-callout">
    <span class="help-callout-circle"></span>
    [ content goes here ]
  </div>
*/

/* TODO: These could stand to be refactored to better manage the different contexts
   in which these circles are used. */

.help-callout {
  background-color: @five-percent-grey;
  .border-radius(10px);
  padding: 15px 10px;
  margin-top: 15px; // ensure adequate clearance for decorative circle
  position: relative;
  .text-center;

  img {
    .img-responsive;
  }

  p {
    margin: 10px;
  }
}

.help-callout-circle-unpositioned {
  background-color: @light-grey;
  border: 1px solid @light-grey;
  color: white;
  height: 20px !important;
  line-height: 20px;
  width: 20px !important;
  .border-radius(10px); // radius equal to half of height/width creates a circle
  padding: 1px 3px;
  font-size: 18px;
  float: left;
}

.help-callout-circle {
  .help-callout-circle-unpositioned;

  /* Counter half the circle height and width, plus margins and padding, so that
     the implied intersection of the box borders is at the circle center.
  */
  margin-top: -25px;
  margin-left: -18px; 

  z-index: 100;
  clear: none;
}

img.help-callout-top {
  /* For when you want the image to fill the entire size of the help callout
     and sit under the question mark. See the measurement input page.
  */
  position: absolute;
  top: 0;
  margin-top: 0;
  z-index: -100;
}

.help-callout-blue {
  border: 2px solid @dark-blue;
  padding: 13px 8px;
  margin-top: 15px; // ensure adequate clearance for decorative circle
  position: relative;
  .text-center;

  img {
    .img-responsive;
  }

  p {
    margin: 10px;
  }
}


.help-callout-circle-unpositioned-blue {
  .help-callout-circle-unpositioned;
  background-color: @dark-blue;
  border: 1px solid @dark-blue;  
}

/*
-----------------------------------------------------------------------------
VIDEOS
-----------------------------------------------------------------------------*/


/* nothing yet */


/*
-----------------------------------------------------------------------------
ACCORDIONS
-----------------------------------------------------------------------------*/


/* If you have a <span class="caret"> inside a link that controls a bootstrap
   accordion or dropdown, this will make it point right when the panel is
   unexpanded and down when the panel is expanded.
*/
a .caret, a .glyphicon-menu-down {
  display: inline-block;
  .rotate(270deg);
}

a[aria-expanded="true"] .caret, a[aria-expanded="true"] .glyphicon-menu-down {
  display: inline-block;
  .rotate(0deg);
}

legend a .glyphicon-menu-down {
  padding-bottom: 7px;
}

legend a[aria-expanded="true"] .glyphicon-menu-down {
  padding-bottom: inherit;
}

/*
-----------------------------------------------------------------------------
MODALS
-----------------------------------------------------------------------------*/


.modal {
  margin-top: 50px;

  img:hover {
    cursor: pointer;
  }
}

/*
-----------------------------------------------------------------------------
MESSAGES/ALERTS
-----------------------------------------------------------------------------*/

.messages, .alert {
  @media ( min-width: @screen-sm-min ) {
    max-width: 75%;
  }
  .text-center;
  margin: 10px auto;
  border: none;
}

ul.messages {
  list-style-type: none;
  padding-left: 0;

  li:not(:first-child) {
    // Make sure that, if there are multiple messages, they are adequately spaced
    padding-top: 0.75*@line-height-computed;
  }
}

.alert-info {
  background-color: @dark-blue;
  color: white;

  li:not(:first-child) {
    padding-top: 0.75*@line-height-computed;
  }

  a {
    color: @yellow;

    &:hover {
      color: white;
    }
  }
}

.alert-error, .alert-danger, .alert.error {
  background-color: @error-color;
  color: white;

  li:not(:first-child) {
    padding-top: 0.75*@line-height-computed;
  }
}

.alert-minimal {
  background-color: @lightest-grey;
  border: @light-grey 1px solid;
  padding-top: 8px;
  padding-bottom: 8px;
}

/*
-----------------------------------------------------------------------------
TABLES
-----------------------------------------------------------------------------*/

.table-center {
  /* The usual bootstrap centering classes don't seem to work on tables. */
  margin-left: auto;
  margin-right: auto;
}

.table-customfit {
  .table;
  .table-hover;
  .table-responsive;

  /* This does NOT provide table-striped or table-bordered as not all our tables want to
     be striped or bordered; you must provide those.
  */

  thead td {
    .strong;
  }

}

.vcenter {
  /* Vertically centers a single line of text, when other cells in the row contain a lone button. */
  line-height: 46px;
  height: 46px;
}
/*
-----------------------------------------------------------------------------
THUMBNAILS
-----------------------------------------------------------------------------*/

.customfit-action-tile {
  /*
    This is used for things such as the options on the user home page: a
    circular image above a caption. Use thusly:

      <div class="customfit-action-tile">
        <img src="[[ url ]]" alt=[[ alt text ]]>
        <p>[[ caption ]]</p>
      </div>

    Everything will be automatically formatted. (You may substitute a div or h4
    for the p.)

    To control the size of the tile, enclose in a col-* div. We don't control
    that here because this tile is used in a variety of layouts.

    If you need a colorblock with no (apparent) image, use static/img/FFFFFF-0.png
    as the image src. This is a 300x300 transparent PNG that will play nice with
    the responsive utilities (aka a gross hack).
  */
  margin: 5%;
  margin-bottom: 60px;

  img {
    .img-customfit;
  }

  p, div, h4, a {
    .text-center;
  }

  h4 > a, p > a:not('.btn-customfit-outline')  {
    color: @body-color;
  }

  h4 {
    height: 2*@font-size-h4 + 2px;
    overflow: hidden;
  }

  .btn-customfit, .btn-customfit-action, .btn-customfit-outline {
    margin-right: 0;
    padding-left: 5px;
    padding-right: 5px;
  }
}

.customfit-action-tile-rectangle {
  /* Rectangular rather than circular/elliptical images. */
  .customfit-action-tile;

  img.choose-design-hero {
    .img-rounded !important;
    margin-bottom: 5px;
  }

  div.silhouette_icon_array_div {
    white-space: nowrap;
    margin: 0px;
    padding: 0px;
    width: 100%;
    display: inline-block;
  }

  div.silhouette_icon_div {
    max-width: 20%;
    float: left;
    min-width: 20%;
    margin: 0px;
    padding: 0px;
  }

  img.silhouette_icon_img {
    max-width: 65%;
    padding: 0px;
    border-radius: 7%;
    margin: auto;
    opacity: 0.8;
  }
  
  a.design-name {
      white-space: nowrap;
  }
  
  blockquote {
      font-style: italic;
      font-size: 14px;
      padding: 5px 20px
  }

}

div.below-design-images-row {



  div.below-design-images-silhouette-icons {
    width:50%;
    display:inline-block;
  }

  div.silhouette_icon_div {
    max-width: 20%;
    float: left;
    min-width: 20%;
    margin: auto;
    padding: 0px;
  }

  img.silhouette_icon_img {
    max-width: 65%;
    padding: 0px;
    border-radius: 7%;
    margin: auto;
    opacity: 0.8;
  }
}

/* Narrow action tiles are good in places that expect a list of lots of tiles
   (e.g. the pattern list page); the extra whitespace looks better.
*/
.customfit-action-tile-narrow {
  .customfit-action-tile;

  @media (min-width: @screen-sm-min) {
    padding-right: 5%;
    padding-left: 5%;    
  }

  h4, p {
    /* These can be wider than the tile, though not wider than its containing
      grid column. */
    margin-right: -15%;
    margin-left: -15%;
    .text-center;
  }
}

@media (max-width: @screen-sm-min) {
  .customfit-action-tile-narrow {
    padding-right: inherit;
  }

  h4 {
    margin-right: inherit;
    margin-left: inherit;
  }
}

.customfit-horizontal-tile-nocenter {
  /* As below, but does not attempt to vertically center text, top-aligning instead. */
  .row;
  .clearfix;
  padding-left: 15px;

  img {
    .img-customfit;
    max-height: 7*@line-height-computed;
    .pull-left;
    max-width: 25%;
  }

  > div {
    .pull-left;
    padding-left: 20px;    
    max-width: 75%;
  }
}

.customfit-horizontal-tile {
  /* This is for circular images adjacent to text, buttons, etc. Use thusly:

      <div class="customfit-horizontal-tile">
        <img src="[[ url ]]">
        <div>
          <p>[[ content ]]</p>
          <p>[[ moar content ]]</p>
          <p>[[ please don't use more than 3 paras ]]</p>
        </div>
      </div>
  */

  .customfit-horizontal-tile-nocenter;
  position: relative;

  /* The following are to more-or-less vertically center content by the image.
     Vertical centering is the worst. THE WORST.
  */

  /* First, ensure that the div containing the paragraphs fills the height of
     its container; has a centered baseline; and clears the image on its left. */
  > div {
    top: 50%;
    position: absolute;
    left: 7*@line-height-computed + 15px;

    /* Next, we will need to push the paragraphs up or down. The amount of
       vertical correction we need depends on how many lines of text we have.
       This assumes that paragraphs are one line each, and will be slightly
       inaccurate if they are not. CSS does not provide means for gauging
       exact vertical sizing.

       See http://lea.verou.me/2011/01/styling-children-based-on-their-number-with-css3/
       for why this works.
    */

    /* This rule applies when there is only one paragraph. */
    p:nth-child(1):nth-last-child(1) {
      margin-top: -1*@line-height-computed;
      margin-bottom: .5*@line-height-computed;
    }

    /* These rules apply when there are two paragraphs. */
    p:nth-child(1):nth-last-child(2) {
      margin-top: -1.5*@line-height-computed;
      margin-bottom: 0;
    }

    p:nth-child(2):nth-last-child(1) {
      margin-top: .5*@line-height-computed;
      margin-bottom: 0;
    }

    /* These rules apply when there are three paragraphs. */
    p:nth-child(1):nth-last-child(3) {
      margin-top: -2.5*@line-height-computed;
      margin-bottom: 0;
    }

    p:nth-child(2):nth-last-child(2) {
      /* No rule needed since its natural position is correct. */
    }

    p:nth-child(3):nth-last-child(1) {
      margin-top: -.5*@line-height-computed;
      margin-bottom: 0;
    }

    /* Don't use more than 3 paragraphs. */
  }
}

.thumbnail .caption {
  color: @grey;
}

/*
-----------------------------------------------------------------------------
GALLERIES
-----------------------------------------------------------------------------*/

.gallery-container {
  width:100%;
  margin-bottom: 20px;
  overflow-x:scroll;

  img {
    &:hover {
      /* While normally, as links, these would have a hover state, the borders
         of that hover interact weirdly with the scroll action; sometimes
         only part of the image is opacified. So let's just not do it.
      */
      opacity: inherit;
    }
  }

  @media (max-width: @screen-xs-max) {
    /* On phones, display 1 image. Remainder will scroll.
    */
    > div {
      width: 1000%;

      > div {
        width: 10%;
        float: left;
        padding: 10px;
      } 
    }    
  }
  @media (min-width: @screen-sm-min) {
    /* On tablets, display 4 images. Remainder will scroll.
    */
    > div {
      width: 333%;

      > div {
        width: 10%;
        float: left;
        padding: 10px;
      } 
    }    
  }
  @media (min-width: @screen-md-min) {
    /* On desktops, display 5 images. Remainder will scroll, but scrollbar
       is hidden unless people mouse over, because our goal is not to
       highlight scrolling here.
    */
    > div {
      width: 200%;

      > div {
        width: 10%;
        float: left;
        padding: 10px;
      } 
    }    
  }

  /* Force the scrollbar to show up on phone/tablet screens, at least on webkit browsers */
  @media (max-width: @screen-sm-max) {
    
    &::-webkit-scrollbar {
        width: 7px;
        height: 7px;
    }
     
    &::-webkit-scrollbar-track {
        -webkit-box-shadow: inset 0 0 6px @lighter-grey; 
        border-radius: 10px;
    }
     
    &::-webkit-scrollbar-thumb {
        border-radius: 10px;
        -webkit-box-shadow: inset 0 0 6px @lighter-grey;
        background: @light-grey;
    }
  }
}

/*
.scrolling-gallery {
  width:10000%;
}
*/

/* Sidebar styles */

.sidebar {
    background: #f7f7f7;
    h6 {
        text-transform: uppercase;
        text-align: center;
        height: 50px;
        position: relative;
        font-size: 15px;
        font-weight: bold;
        span.hr {
            position: absolute;
            height: 1px;
            width: 100%;
            top: 50%;
            margin-top: -2px;
            left: 0;
            background: #bdbbc0;
        }
        span.title {
            margin-bottom: -5px;
            position: relative;
            height: 100%;
            line-height: 50px;
            display: inline-block;
            background: #f7f7f7;
            padding: 0px 10px;
        }
    }
    ul {
        padding: 0 15px 20px;
        list-style: none;
        font-size: 18px;
        font-weight: bold;
        font-family: @font-family-sans-serif-light;
        line-height: 22px;
        color: #5c5b65;
        li {
            margin-bottom: 16px;
        }
    }
    a {
        color: #5c5b65 !important;
        text-decoration: underline;
    }
    a:hover {
        /*text-decoration: none;*/
        opacity: .7;
        transition: opacity .6s ease;
    }
}


/* Personalize Design Pages */
.personalize-individual {
    .sidebar-col {
        padding-top: 115px;
    }
    @media (max-width: @screen-sm-max) {
        .test-knitter-header {
            text-align: center;
        }
        div.below-design-images-row {
            text-align: center;
            .silhouette_icon_div {
                display: inline-block;
                float: none;
            }
        }
    }
    @media (min-width: @screen-md-min) {
        #gallery.clear-columns {
            clear: both;
        }
    }
}
